// Code generated by MockGen. DO NOT EDIT.
// Source: ingest.go
//
// Generated by this command:
//
//	mockgen --source ingest.go -destination mocks/ingest.go -package mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	sdump "github.com/adelowo/sdump"
	gomock "go.uber.org/mock/gomock"
)

// MockIngestRepository is a mock of IngestRepository interface.
type MockIngestRepository struct {
	ctrl     *gomock.Controller
	recorder *MockIngestRepositoryMockRecorder
}

// MockIngestRepositoryMockRecorder is the mock recorder for MockIngestRepository.
type MockIngestRepositoryMockRecorder struct {
	mock *MockIngestRepository
}

// NewMockIngestRepository creates a new mock instance.
func NewMockIngestRepository(ctrl *gomock.Controller) *MockIngestRepository {
	mock := &MockIngestRepository{ctrl: ctrl}
	mock.recorder = &MockIngestRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIngestRepository) EXPECT() *MockIngestRepositoryMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIngestRepository) Create(arg0 context.Context, arg1 *sdump.IngestHTTPRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIngestRepositoryMockRecorder) Create(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIngestRepository)(nil).Create), arg0, arg1)
}
